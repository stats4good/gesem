require(blogdown)
blogdown::serve_site()
blogdown::serve_site()
require(blogdown)
build_site()
build_site()
serve_site()
build_site()
build_site()
build_site()
server_site()
server_site()
serve_site()
require(blogdown)
build_site()
build_site()
serve_site()
require(blogdown)
build_site()
build_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
require(blogdown)
build_site()
serve_site()
serve_site()
build_site()
require(blogdown)
build_site()
serve_site()
build_site()
serve_site()
serve_site()
serve_site()
build_site()
build_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
blogdown::bbuild_site()
blogdown::build_site()
Sys.time()
time_1 <- Sys.time()
time_2 <- Sys.time()
time_2-time1
time_2-time_1
system.time(rnorm(10000))
require(blogdown)
build_site()
build_site()
serve_site()
serve_site()
require(blogdown)
build_site()
build_site()
build_site()
build_site()
build_site()
serve_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
devtools::install_github('rstudio/rmarkdown')
build_site()
build_site()
require(blogdown)
build_site()
install.packages("blogdown")
require(blogdown)
serve_site()
require(blogdown)
serve_site()
require(widgetframe)
require(widgetframe)
serve_site()
require(sparklyr)
require(blogdown)
serve_site()
serve_site()
serve_site()
serve_site()
100/6
100/6
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
require(blogdown)
serve_site()
serve_site()
serve_site()
100/6
serve_site()
serve_site()
require(blogdown)
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
build_site()
require(blogdown)
serve_site()
serve_site()
build_site()
require(blogdown)
serve_site()
build_site()
build_site()
install.packages("wordcloud2")
build_site()
install.packages("tm")
build_site()
build_site()
build_site()
install.packages("~/Dropbox/outros_projetos/UFMG/stats4good/packages/maps2sinan_0.1.3.tar.gz", repos = NULL, type = "source")
install.packages("~/Dropbox/outros_projetos/UFMG/stats4good/packages/maps2sinan_0.1.3.tar.gz", repos = NULL, type = "source")
build_site()
build_site()
install.packages("kableExtra")
build_site()
serve_site()
serve_site()
serve_site()
require(blogdown)
serve_site()
build_site()
require(blogdown)
serve_site
serve_site()
install.packages("sparklyr")
require(sparklyr)
spark_install()
require(sparklyr)
config <- spark_config()
config
config <- spark_config()
sc <- spark_connect(master = "local",
version = "2.3.0",
config = config)
config <- spark_config()
config
?spark_connect
require(sparklyr)
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <-
"/usr/share/java/mysql-connector-java-8.0.11-bin.jar"
sc <- spark_connect(master = "local",
version = "2.3.0",
config = config)
config$`sparklyr.shell.driver-class-path` <-
"~/usr/share/java/mysql-connector-java-8.0.11-bin.jar"
sc <- spark_connect(master = "local",
version = "2.3.0",
config = config)
sc <- spark_connect(master = "localhost",
version = "2.3.0",
config = config)
require(sparklyr)
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <-
"~/usr/share/java/mysql-connector-java-8.0.11-bin.jar"
config$`sparklyr.shell.driver-class-path` <- "~/usr/share/java/mysql-connector-java-8.0.11-bin.jar"
file.exists( "~/usr/share/java/mysql-connector-java-8.0.11-bin.jar")
file.exists( "/usr/share/java/mysql-connector-java-8.0.11-bin.jar")
setwd("~")
setwd("..")
setwd("..")
setwd("/usr/share/java")
file.exists( "mysql-connector-java-8.0.11-bin.jar")
require(sparklyr)
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <- "~/usr/share/java/mysql-connector-java-8.0.11.jar"
sc <- spark_connect(master = "local",
config = config)
config$`sparklyr.shell.driver-class-path` <- "/usr/share/java/mysql-connector-java-8.0.11.jar"
sc <- spark_connect(master = "local",
config = config)
setwd("~")
require(sparklyr)
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <- "/usr/share/java/mysql-connector-java-8.0.11.jar"
sc <- spark_connect(master = "local",
config = config)
file.exists("/usr/share/java/mysql-connector-java-8.0.11.jar")
require(sparklyr)
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <- "/usr/share/java/mysql-connector-java-8.0.11.jar"
sc <- spark_connect(master = "local",
config = config)
require(sparklyr)
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <- "/usr/share/java/mysql-connector-java-8.0.11.jar"
sc <- spark_connect(master = "local",
config = config)
$Env:JAVA_HOME
Sys.getenv('JAVA_HOME')
require(sparklyr)
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <- "/usr/share/java/mysql-connector-java-8.0.11.jar"
sc <- spark_connect(master = "local",
config = config)
require(sparklyr)
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <- "/usr/share/java/mysql-connector-java-8.0.11.jar"
sc <- spark_connect(master = "local",
config = config)
require(sparklyr)
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <- "/usr/share/java/mysql-connector-java-8.0.11.jar"
sc <- spark_connect(master = "local",
config = config)
require(sparklyr)
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <- "/usr/share/java/mysql-connector-java-8.0.11.jar"
sc <- spark_connect(master = "local",
config = config)
spark_read_jdbc(sc, "teste",  options = list(url = "jdbc:mysql://localhost:3306/sparklyr",
user = "root",
password = "douglas9944",
dbtable = "oftalmologia"))
spark_read_jdbc(sc, "teste",  options = list(url = "jdbc:mysql://localhost:3306/oftalmologia",
user = "root",
password = "douglas9944",
dbtable = "oftalmologia"))
spark_read_jdbc(sc, "teste",  options = list(url = "jdbc:mysql://localhost:3306/fecomercio",
user = "root",
password = "douglas9944",
dbtable = "CNAE"))
require(blogdown)
serve_site(serve_site())
build_site()
x <- rexp(n = 100, rate = 1)
plot(sort(x))
plot(log(sort(x)))
x <- rexp(n = 1000, rate = 1)
plot(log(sort(x)))
plot(sort(x))
require(survival)
fit <- coxph(Surv(start, stop, event) ~ (age + surgery)*transplant, data = heart, method = "breslow")
mresid <- resid(fit, type = "martingale")
bmt
data(bmt)
##-- Pacotes ----
require(survival)
fit <- coxph(Surv(start, stop, event) ~ (age + surgery)*transplant, data = heart, method = "breslow")
res_m <- resid(fit, type = "martingale")
res_d <- resid(fit, type = "deviance")
res_s <- resid(fit, type = "schoenfeld")
res_s
gbcs <- read.csv("https://ryanwomack.com/data/gbcs.csv")
View(gbcs)
?retinopathy
lung
names(lung)
fit <- coxph(Surv(time, status) ~ age + sex + ph.ecog, data = lung, method = "breslow")
##-- Pacotes ----
require(survival)
fit <- coxph(Surv(time, status) ~ age + sex + ph.ecog, data = lung, method = "breslow")
res_m <- resid(fit, type = "martingale")
res_c <- lung$status - res_m
lung$status
res_m
##-- Pacotes ----
require(survival)
fit <- coxph(Surv(time, status) ~ age + sex + ph.ecog, data = lung, method = "breslow")
res_m <- resid(fit, type = "martingale")
res_c <- lung$status - res_m
length(lung$status)
length(res_m)
##-- Pacotes ----
require(dplyr)
require(survival)
lung_df <- lung_df %>%
select(time, status, age, sex, ph.ecog) %>%
na.omit
lung_df <- lung %>%
select(time, status, age, sex, ph.ecog) %>%
na.omit
fit <- coxph(Surv(time, status) ~ age + sex + ph.ecog, data = lung, method = "breslow")
res_m <- resid(fit, type = "martingale")
res_c <- lung$status - res_m
##-- Pacotes ----
require(dplyr)
require(survival)
lung_df <- lung %>%
select(time, status, age, sex, ph.ecog) %>%
na.omit
fit <- coxph(Surv(time, status) ~ age + sex + ph.ecog, data = lung_df, method = "breslow")
res_m <- resid(fit, type = "martingale")
res_c <- lung$status - res_m
res_c <- lung_df$status - res_m
res_d <- resid(fit, type = "deviance")
res_s <- resid(fit, type = "schoenfeld")
plot(fit)
fit
summary(fit)
##-- Ajuste ----
fit <- coxph(Surv(time, status) ~ age + ph.ecog, data = lung_df, method = "breslow")
summary(fit)
autoplot(fit)
temp <- cox.zph(fit)
print(temp)
plot(temp)
require(ggplot2)
##-- Cox-Snell ----
fit_res <- survfit(coxph(Surv(res_c, lung_df$status) ~ 1,method = 'breslow'), type = 'aalen')
plot(fit_res$time,-log(fit_res$surv),type='s',xlab='Cox-Snell Residuals',
ylab='Estimated Cumulative Hazard Function',
main='Figure 11.1 on page 356')
plot(fit_res$time,res_c,type='s',xlab='Cox-Snell Residuals',
ylab='Estimated Cumulative Hazard Function',
main='Figure 11.1 on page 356')
fit_res$time
res_c
length(fit_res$time)
length(res_c)
##-- Cox-Snell ----
fit_res <- survfit(coxph(Surv(res_c, lung_df$status) ~ 1,method = 'breslow'), type = 'aalen')
coxsnell_df <- data.frame(time = fit_res$time, H = fit_res$surv)
ggplot(coxsnell_df) +
geom_line(mapping = aes(x = time, y = H))
plot(fit_res$time,res_c,type='s',xlab='Cox-Snell Residuals',
ylab='Estimated Cumulative Hazard Function',
main='Figure 11.1 on page 356')
plot(fit_res$time,-log(fit_res$surv),type='s',xlab='Cox-Snell Residuals',
ylab='Estimated Cumulative Hazard Function',
main='Figure 11.1 on page 356')
fit_res$time
fit_res$surv
coxsnell_df <- data.frame(time = fit_res$time, H = -log(fit_res$surv))
ggplot(coxsnell_df) +
geom_line(mapping = aes(x = time, y = H))
require(ggthemes)
ggplot(coxsnell_df) +
geom_line(mapping = aes(x = time, y = H)) +
xlab("Tempo") + ylab("Risco acumulado")
ggplot(coxsnell_df) +
geom_line(mapping = aes(x = time, y = H)) +
geom_abline(intercept = 0, slope = 1, color = "IndianRed") +
xlab("Tempo") + ylab("Risco acumulado") +
}
ggplot(coxsnell_df) +
geom_line(mapping = aes(x = time, y = H)) +
geom_abline(intercept = 0, slope = 1, color = "IndianRed") +
xlab("Tempo") + ylab("Risco acumulado") +
theme_bw()
fit_res$time
ggplot(coxsnell_df) +
geom_line(mapping = aes(x = time, y = H)) +
geom_abline(intercept = 1, slope = 1, color = "IndianRed") +
xlab("Tempo") + ylab("Risco acumulado") +
theme_bw()
ggplot(coxsnell_df) +
geom_line(mapping = aes(x = time, y = H)) +
geom_abline(intercept = -1, slope = 1, color = "IndianRed") +
xlab("Tempo") + ylab("Risco acumulado") +
theme_bw()
gg_coxsnell
??gg_coxsnell
res_m
plot(coxsnell_df, fun="cumhaz")
plot(fit_res, fun="cumhaz")
abline(0,1,col=2)
debug(plot)
plot(fit_res, fun="cumhaz")
x
undebug(plot)
coxsnell_df <- data.frame(time = fit_res$time, H = -log(fit_res$surv), lower = -log(fit_res$lower), upper = -log(fit_res$upper))
ggplot(coxsnell_df) +
geom_line(mapping = aes(x = time, y = H)) +
geom_line(mapping = aes(x = time, y = lower), linetype = "dashed") +
geom_line(mapping = aes(x = time, y = upper), linetype = "dashed") +
geom_abline(intercept = 0, slope = 1, color = "IndianRed") +
xlab("Tempo") + ylab("Risco acumulado") +
theme_bw()
order(lung_df$age)
##-- Martigale ----
martingale_df <- data.frame(res = res_m, var = lung_df$age)
ggplot(martingale_df) +
geom_point(mapping = aes(x = var, y = res))
ggplot(martingale_df) +
geom_point(mapping = aes(x = var, y = res)) +
geom_smooth(mapping = aes(x = var, y = res)) +
xlab("Variável") + ylab("Resíduos Martingale") +
theme_bw()
ggplot(martingale_df) +
geom_point(mapping = aes(x = var, y = res)) +
geom_smooth(mapping = aes(x = var, y = res),  method = 'loess', se = FALSE) +
xlab("Variável") + ylab("Resíduos Martingale") +
theme_bw()
##-- Martigale ----
martingale_df <- data.frame(res = res_m, var = lung_df$ph.ecog)
ggplot(martingale_df) +
geom_point(mapping = aes(x = var, y = res)) +
geom_smooth(mapping = aes(x = var, y = res),  method = 'loess', se = FALSE) +
xlab("Variável") + ylab("Resíduos Martingale") +
theme_bw()
##-- Martigale ----
martingale_df <- data.frame(res = res_m, var = lung_df$age)
ggplot(martingale_df) +
geom_point(mapping = aes(x = var, y = res)) +
geom_smooth(mapping = aes(x = var, y = res),  method = 'loess', se = FALSE) +
xlab("Variável") + ylab("Resíduos Martingale") +
theme_bw()
ggplot(martingale_df) +
geom_point(mapping = aes(x = var, y = res)) +
geom_smooth(mapping = aes(x = var, y = res),  method = 'loess', se = FALSE, color = "IndianRed") +
xlab("Variável") + ylab("Resíduos Martingale") +
theme_bw()
##-- Deviance ----
deviance_df <- data.frame(res = res_d, var = lung_df$age)
ggplot(martingale_df) +
geom_point(mapping = aes(x = var, y = res)) +
geom_smooth(mapping = aes(x = var, y = res),  method = 'loess', se = FALSE, color = "IndianRed") +
xlab("Variável") + ylab("Resíduos Martingale") +
theme_bw()
ggplot(deviance_df) +
geom_point(mapping = aes(x = var, y = res)) +
geom_smooth(mapping = aes(x = var, y = res),  method = 'loess', se = FALSE, color = "IndianRed") +
xlab("Variável") + ylab("Resíduos Martingale") +
theme_bw()
ggplot(deviance_df) +
geom_point(mapping = aes(x = var, y = res)) +
xlab("Variável") + ylab("Resíduos Deviance") +
theme_bw()
